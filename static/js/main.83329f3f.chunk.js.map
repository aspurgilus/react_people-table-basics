{"version":3,"sources":["components/Header.tsx","Pages/HomePage.tsx","Pages/NotFoundPage.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","Pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Header","memo","navLinkClass","isActive","className","to","HomePage","NotFoundPage","PersonRow","person","name","sex","born","died","mother","father","PeopleTable","people","map","slug","PeoplePage","useState","setPeople","useEffect","fetch","then","response","json","data","preparedPeople","child","find","fatherName","motherName","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"8OAOaA,EAAaC,gBAAK,WAC7B,IAAMC,EAAe,SAAC,GAAD,SAAGC,SACX,+BAAiC,sBAG9C,OACE,mCACE,qBACEC,UAAU,SADZ,SAGE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAWF,EAA3B,uBACA,cAAC,IAAD,CAASG,GAAG,UAAUD,UAAWF,EAAjC,yBAGJ,cAAC,IAAD,UCpBOI,EAAe,WAC1B,OACE,mCACE,oBAAIF,UAAU,QAAd,0BCHOG,EAAmB,WAC9B,OACE,iD,cCGSC,G,MAAuBP,gBAAK,YAAiB,IAAD,IAAbQ,EAAa,EAAbA,OAC1C,OACE,qBAAIL,UAAU,SAAd,UACE,6BACGK,EAAOC,OAEV,6BACGD,EAAOE,MAEV,6BACGF,EAAOG,OAEV,6BACGH,EAAOI,OAEV,uCACGJ,EAAOK,cADV,aACG,EAAeJ,OAElB,uCACGD,EAAOM,cADV,aACG,EAAeL,cCjBXM,EAAyBf,gBAAK,YAAiB,IAAdgB,EAAa,EAAbA,OAC5C,OACE,wBAAOb,UAAU,kCAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGa,EAAOC,KAAI,SAAAT,GAAM,OAChB,cAACD,EAAD,CAA6BC,OAAQA,GAArBA,EAAOU,iBClBpBC,EAAiBnB,gBAAK,WACjC,MAA4BoB,mBAAuB,IAAnD,mBAAOJ,EAAP,KAAeK,EAAf,KA0BA,OAxBAC,qBAAU,WACRC,MAAM,qEACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMC,EAAiBD,EAAKV,KAAI,SAACY,GAC/B,IAAMf,EAASa,EAAKG,MAAK,SAACtB,GAAD,OACvBA,EAAOC,OAASoB,EAAME,eAClB,KAEAlB,EAASc,EAAKG,MAAK,SAACtB,GAAD,OACvBA,EAAOC,OAASoB,EAAMG,eAClB,KAEN,OAAO,2BACFH,GADL,IAEEf,SACAD,cAIJQ,EAAUO,QAEb,IAGD,qCACE,oBAAIzB,UAAU,QAAd,yBAEA,cAACY,EAAD,CACEC,OAAQA,UClBDiB,G,YAZH,kBACV,sBAAK9B,UAAU,MAAf,UACE,cAACJ,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAChB,EAAD,MAC9B,cAAC,IAAD,CAAOe,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUC,SAAO,EAAChC,GAAG,QACjD,cAAC,IAAD,CAAO8B,KAAK,IAAIC,QAAS,cAAC,EAAD,cCX/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83329f3f.chunk.js","sourcesContent":["import { FC, memo } from 'react';\nimport { NavLink, Outlet } from 'react-router-dom';\n\ntype Active = {\n  isActive: boolean\n};\n\nexport const Header: FC = memo(() => {\n  const navLinkClass = ({ isActive }: Active) => (\n    isActive ? 'navbar-item is-tab is-active' : 'navbar-item is-tab'\n  );\n\n  return (\n    <header>\n      <nav\n        className=\"navbar\"\n      >\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={navLinkClass}>Home page</NavLink>\n          <NavLink to=\"/people\" className={navLinkClass}>People</NavLink>\n        </div>\n      </nav>\n      <Outlet />\n    </header>\n  );\n});\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">Home page</h1>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <h1>Page not found</h1>\n  );\n};\n","import { FC, memo } from 'react';\nimport { FullPerson } from '../../types/person';\n\ninterface Props {\n  person: FullPerson\n}\n\nexport const PersonRow: FC<Props> = memo(({ person }) => {\n  return (\n    <tr className=\"Person\">\n      <td>\n        {person.name}\n      </td>\n      <td>\n        {person.sex}\n      </td>\n      <td>\n        {person.born}\n      </td>\n      <td>\n        {person.died}\n      </td>\n      <td>\n        {person.mother?.name}\n      </td>\n      <td>\n        {person.father?.name}\n      </td>\n    </tr>\n  );\n});\n","import { FC, memo } from 'react';\nimport { FullPerson } from '../../types/person';\nimport './peopleTable.scss';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\ninterface Props {\n  people: FullPerson[]\n}\n\nexport const PeopleTable: FC<Props> = memo(({ people }) => {\n  return (\n    <table className=\"people__table table is-bordered\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <PersonRow key={person.slug} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import {\n  FC, memo, useEffect, useState,\n} from 'react';\nimport { FullPerson, Person } from '../types/person';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage: FC = memo(() => {\n  const [people, setPeople] = useState<FullPerson[]>([]);\n\n  useEffect(() => {\n    fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n      .then(response => response.json())\n      .then(data => {\n        const preparedPeople = data.map((child: Person) => {\n          const father = data.find((person: Person) => (\n            person.name === child.fatherName\n          )) || null;\n\n          const mother = data.find((person: Person) => (\n            person.name === child.motherName\n          )) || null;\n\n          return {\n            ...child,\n            father,\n            mother,\n          };\n        });\n\n        setPeople(preparedPeople);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People page</h1>\n\n      <PeopleTable\n        people={people}\n      />\n    </>\n  );\n});\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { HomePage } from './Pages/HomePage';\nimport { NotFoundPage } from './Pages/NotFoundPage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"people\" element={<PeoplePage />} />\n      <Route path=\"home\" element={<Navigate replace to=\"/\" />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}